# IXSIL init properties
#
# This file contains the basic initialization properties for IXSIL.

#----------------------------------------------------------------------------------------------------------
# Properties for localizing exeption messages

# This property specifies the ISO language code, which is used to select the appropriate exception message
# file. Please see the documentation for Java class "java.util.RessourceBundle" for further information.

IXSILException.ISOLanguageCode = "en"



# This property specifies the ISO country code, which is used to select the appropriate exception message
# file. Please see the documentation for Java class "java.util.RessourceBundle" for further information.

IXSILException.ISOCountryCode = "US"


#----------------------------------------------------------------------------------------------------------
# Other property files

# This property contains a URI specifying the (virtual) location of the IXSIL init properties file (i. e.
# this file). The URI MUST be absolute.
#
# The use of this property is optional. It is only needed by IXSIL, if the library will be initialized using
# the method IXSILInit.init(Properties, Properties, Properties). In this case it is used by IXSIL as the
# base URI for absolutizing other property URIs, such as "DOMUtils.SignatureSchema" (see below).
#
# PLEASE NOTE: Contrary to URIs under e.g. http or ftp scheme, URIs under file and jar scheme do not have an
#              authority component. This means that the part following the scheme identifier starts with "/"
#              (single slash character), and not with "//" (two slash characters).
#
# Example 1 (absolute URI under file scheme): "file:/c:/path1/path2/init.properties"
# Example 2 (absolute URI under jar scheme): "jar:/file:/c:/path1/path2/archive.jar!/init.properties"
# Example 3 (absolute URI under http scheme): "http://somewhere.org/path1/path2/init.properties"

location.initProperties = file:packages/WmebXML/config/init/properties/init.properties



# This property contains a URI specifying the location of the IXSIL algorithm properties file. The URI can
# be absolute or relative. If a relative URI is used, it will be absolutized using this init property file's
# URI as the base.
#
# PLEASE NOTE: Contrary to URIs under e.g. http or ftp scheme, URIs under file and jar scheme do not have an
#              authority component. This means that the part following the scheme identifier starts with "/"
#              (single slash character), and not with "//" (two slash characters).
#
# Example 1 (absolute URI under file scheme): "file:/c:/path1/path2/algorithms.properties"
# Example 2 (absolute URI under jar scheme): "jar:/file:/c:/path1/path2/archive.jar!/algorithms.properties"
# Example 3 (absolute URI under http scheme): "http://somewhere.org/path1/path2/algorithms.properties"
# Example 4 (relative URI): "../otherpath/algorithms.properties"
# Example 5 (relative URI): "algorithms.properties"

location.algorithmsProperties = file:packages/WmebXML/config/init/properties/algorithms.properties



# This property contains a URI specifying the location of the IXSIL keyManager properties file. The URI can
# be absolute or relative. If a relative URI is used, it will be absolutized using this init property file's
# URI as the base.
#
# PLEASE NOTE: Contrary to URIs under e.g. http or ftp scheme, URIs under file and jar scheme do not have an
#              authority component. This means that the part following the scheme identifier starts with "/"
#              (single slash character), and not with "//" (two slash characters).
#
# Example 1 (absolute URI under file scheme): "file:/c:/path1/path2/keyManager.properties"
# Example 2 (absolute URI under jar scheme): "jar:/file:/c:/path1/path2/archive.jar!/keyManager.properties"
# Example 3 (absolute URI under http scheme): "http://somewhere.org/path1/path2/keyManager.properties"
# Example 4 (relative URI): "../otherpath/keyManager.properties"
# Example 5 (relative URI): "keyManager.properties"

location.keyManagerProperties = file:packages/WmebXML/config/init/properties/keyManager.properties



#----------------------------------------------------------------------------------------------------------
# AlgorithmFactory properties



#This property specifies the extension class for the abstract class
#iaik.ixsil.algorithms.AlgorithmFactory, which is instantiated at invokation of method
#iaik.ixsil.algorithms.AlgorithmFactory.createFactory().
#Please specifiy the fully qualified java class name for the class to be instantiated.

AlgorithmFactory.ImplementingClass = iaik.ixsil.algorithms.AlgorithmFactoryDefaultImpl


#----------------------------------------------------------------------------------------------------------
# VerifierKeyManager properties

# This property specifies the implementation class for the interface
# iaik.ixsil.keyinfo.VerifierKeyManager, which is instantiated by IXSIL in the verification use case, if the
# signature algorithm does not know about the verification key, and if the XML signature bears a KeyInfo
# element which contains hints that can be used to deduce the verification key.
# Please specifiy the fully qualified java class name for the class to be instantiated.

VerifierKeyManager.ImplementingClass = iaik.ixsil.keyinfo.KeyManagerImpl



#----------------------------------------------------------------------------------------------------------
# XML namespace prefix properties

# This property specifies the namespace prefix used for XML elements from the XML-Signature namespace.
#
# PLEASE NOTE: The prefix must not be empty.

namespacePrefix.XMLSignature = ds:



# This property specifies the namespace prefix used for XML elements from the XML Schema instance namespace.
#
# PLEASE NOTE: The prefix must not be empty.

namespacePrefix.XMLSchemaInstance = xsi:


#----------------------------------------------------------------------------------------------------------
# DOMUtils properties



# This property specifies the implementation class IXSIL should use for the interface
# iaik.ixsil.util.DOMUtilsInterface, which contains a couple of DOM utility methods, which IXSIL relies
# on. If you would like to employ a parser different from Apache Xerces, you must implement the
# DOMUtilsInterface and specify your implementation class using this property.
# Please specifiy the fully qualified java class name for the class to be instantiated.

DOMUtils.ImplementingClass = iaik.ixsil.util.DOMUtilsImpl
#DOMUtils.ImplementingClass = com.entrust.toolkit.xml.util.DOMUtilsImplApache



# This property is used by the standard implementation class for the interface
# iaik.ixsil.util.DOMUtilsInterface, namely iaik.ixsil.util.DOMUtilsImpl, which ships with IXSIL.
# It specifies, wheter WARNINGS generated by the Apache Xerces parser should lead to a parser exception
# or not.

DOMUtils.ErrorHandler.reportWarnings = true



# This property is used by the standard implementation class for the interface
# iaik.ixsil.util.DOMUtilsInterface, namely iaik.ixsil.util.DOMUtilsImpl, which ships with IXSIL.
# It specifies, wheter ERRORS generated by the Apache Xerces parser should lead to a parser exception
# or not.

DOMUtils.ErrorHandler.reportErrors = true



# This property is used by the standard implementation class for the interface
# iaik.ixsil.util.DOMUtilsInterface, namely iaik.ixsil.util.DOMUtilsImpl, which ships with IXSIL.
# It specifies, wheter FATAL ERRORS generated by the Apache Xerces parser should lead to a parser
# exception or not.

DOMUtils.ErrorHandler.reportFatalErrors = true



# This property is used by the standard implementation class for the interface
# iaik.ixsil.util.DOMUtilsInterface, namely iaik.ixsil.util.DOMUtilsImpl, which ships with IXSIL.
# It specifies an URI for the location of the XML schema for an XML signature, which is used as the
# reference grammar in method iaik.ixsil.util.DOMUtilsImpl.schemaValidateSignatureElement.
# The URI can be absolute or relative. If the URI is relative, it will be absolutized using the URI for
# this init property file as the base.

DOMUtils.SignatureSchema = file:packages/WmebXML/config/init/schemas/Signature.xsd



#----------------------------------------------------------------------------------------------------------
# XPathUtils properties

# This property specifies the implementation class IXSIL should use for the interface
# iaik.ixsil.util.XPathUtilsInterface, which contains a couple of XPath utility methods, which IXSIL relies
# on. If you would like to employ a XPath engine different from Apache Xalan, you must implement the
# XPathUtilsInterface and specify your implementation class using this property.
# Please specifiy the fully qualified java class name for the class to be instantiated.

XPathUtils.ImplementingClass = iaik.ixsil.util.XPathUtilsImpl



#----------------------------------------------------------------------------------------------------------
# CanonicalXMLSerializer properties



# This property specifies the implementation class IXSIL should use for the interface
# iaik.ixsil.util.CanonicalXMLSerialierInterface. IXSIL relies on this interface to serialize XML according
# to "Canonical XML" (see http://www.w3.org/TR/2001/REC-xml-c14n-20010315). If you would like to employ an
# implemenation different from the standard implementation shipped with IXSIL, you must implement the
# CanonicalXMLSerialierInterface and specify your implementation class using this property.
# Please specifiy the fully qualified java class name for the class to be instantiated.

CanonicalXMLSerializer.CanonicalXMLImplementingClass = iaik.ixsil.util.CanonicalXMLSerializerImpl



# This property specifies the implementation class IXSIL should use for the interface
# iaik.ixsil.util.ExclusiveCanonicalXMLSerialierInterface. IXSIL relies on this interface to serialize XML
# according to "Exclusive XML Canonicalization" (see http://www.w3.org/TR/2001/WD-xml-exc-c14n-20011120).
# If you would like to employ an implemenation different from the standard implementation shipped with
# IXSIL, you must implement the ExclusiveCanonicalXMLSerialierInterface and specify your implementation
# class using this property.
# Please specifiy the fully qualified java class name for the class to be instantiated.

CanonicalXMLSerializer.ExclusiveCanonicalXMLImplementingClass = iaik.ixsil.util.CanonicalXMLSerializerImpl
