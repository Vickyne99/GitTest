pg.keystore.keyStoreHandle=
pg.keystore.trustStoreHandle=
#  target name is used by CentraSite/SOA Link to identify this Mediator
pg.policygateway.targetName=your-target-name-here
#
pg.policygateway.repositoryLocation=repository
pg.proxyLoader.proxyLocation=proxies
 #0 indicates the service reader is disabled (to enable specify value in ms e.g. 15000 for 15 secs)
pg.serviceReader.interval=0
pg.vsdTransformer.xslFilePath=resources/transform/pg-vsd-transformer.xsl
pg.jaxbFileStore.consumerFileStore=resources/consumers/consumers.xml
pg.jaxbNamesStore.namesFileStore=resources/consumers/registeredNames.xml

pg.debug.eventLoggerActive=false

#  The deployment receiver temporarily persist some artifacts,
#    should they be retained?  Default is true/yes.
pg.policygateway.deploy.receiver.deleteTempArtifacts=true

# email server
pg.email.SenderActive=false
pg.email.smtpHost=
# email port for smtp/smtps protocol
pg.email.smtpPort=25
# sender email address to use when sending email events 
pg.email.from=
# for authenticated email account
pg.email.userName=
# uses one-way encryption. 
# The mediator trust store must include a cert from the email server's chain.
pg.email.TLSEnabled=false
# additional debug details
pg.email.debug=false
# mime type to use when creating email attachments
pg.email.resourceMimeType=application/zip
# used for send and connection timeouts in milliseconds
pg.email.timeOut=1000
# char set to use for subject line, email addresses and message body
pg.email.charSet=US-ASCII

# points to a spring bean ID so UI determines what to send to 
# 3rd party snmp (mutually exclusive, only one choice active at
# any given time.
#pg.snmp.customTarget=userTarget
pg.snmp.customTarget=communityTarget
pg.snmp.customTarget.sendTraps=false
pg.snmp.customTarget.connTimeout=0

# 3rd party v1 community based connection
# if true, the community name is base64 decoded prior to use
# with snmp4 library
pg.snmp.communityTarget.base64Encoded=false
# community name must be able to accept alert traps. eg: public
pg.snmp.communityTarget.communityName=public
# udp or tcp supported
pg.snmp.communityTarget.transportProtocol=tcp
# host running the snmp server
pg.snmp.communityTarget.ipAddress=
# port accepting requests for snmp server
pg.snmp.communityTarget.port=2162
pg.snmp.communityTarget.retries=1
pg.snmp.communityTarget.sendTimeOut=500
pg.snmp.communityTarget.maxRequestSize=65535

# 3rd party v3 user based connection
#
# username, also known as the security name to snmp server 
pg.snmp.userTarget.userName=
# authenticated messages supported if true
pg.snmp.userTarget.useAuth=false
# MD5 or SHA
pg.snmp.userTarget.authProtocol=MD5
# content gets encrypted if true
pg.snmp.userTarget.usePrivacy=false
# DES,AES128,AES192,AES256
pg.snmp.userTarget.privProtocol=DES
# tcp or udp supported
pg.snmp.userTarget.transportProtocol=tcp
# can't be localhost
pg.snmp.userTarget.ipAddress=
pg.snmp.userTarget.port=2161
pg.snmp.userTarget.retries=1
pg.snmp.userTarget.sendTimeOut=500
pg.snmp.userTarget.maxRequestSize=65535

# CentraSite v3 user based connection
# The default values are synchronized with the defaults used by
# SNMP Event Listener configuration found in CentraSite web.xml
# Minimally, a server name running CS is required for the 
# 'pg.cs.snmpTarget.ipAddress' property in order to configure against
# the out-of-the-box CS installation values.
pg.cs.snmpTarget.sendTraps=false
pg.cs.snmpTarget.base64Encoded=false
pg.cs.snmpTarget.userName=sagSecurityName
pg.cs.snmpTarget.useAuth=false
pg.cs.snmpTarget.authProtocol=MD5
pg.cs.snmpTarget.usePrivacy=false
pg.cs.snmpTarget.privProtocol=DES
pg.cs.snmpTarget.transportProtocol=tcp
# can't be localhost
pg.cs.snmpTarget.ipAddress=
pg.cs.snmpTarget.port=8181
pg.cs.snmpTarget.retries=1
pg.cs.snmpTarget.sendTimeOut=500
pg.cs.snmpTarget.connTimeout=0
pg.cs.snmpTarget.maxRequestSize=10485760
#
#  wrapper factory properties are used to connect to CentraSite/SOA Link
#    name of machine hosting CentraSite/SOA Link
pg.uddiClient.protocol=http
pg.uddiClient.hostName=your-CS-host-name
#    port used for UDDI access to CentraSite/SOA Link
pg.uddiClient.uddiPort=53307
#    credentials identifying a valid user for both UDDI and registry access
pg.uddiClient.userName=your-CS-user-name
#    How many milliseconds before we give up on publishing performance metrics to an unavailable CS server?
pg.uddiClient.uddiClientTimeout=15000
pg.uddiClient.publish.maxThreads=2

#
#  Mediator startup cannot complete (services can't be deployed, CS can't be
#    queried for updates) until IS is up and running.  If IS is not yet
#    fully operational when Mediator starts up, a delayed refresh helper is
#    used to wait for IS.  This helper will periodically check on IS.  This
#    'napMillis' property specifies how long the helper sleeps between checks.
pg.delayedRefresher.napMillis=500

#The path to the ehcache config file; this will be provided to IS the first time
#and further startups will not use the local file, but the one under IS/config/Caching
pg.ehcache.config.file=resources/caching/SoftwareAG-IS-Mediator.xml

#
# How many seconds will shared cache wait to obtain a lock before giving up
pg.PgMenSharedCacheManager.lockTimeOut=5
pg.PgMenSharedCacheManager.lockRetry=1
# How many minutes for performance data publish interval
pg.PgMenConfiguration.reportInterval=60
# Is performance data collection enabled?
pg.PgMenConfiguration.perfDataEnabled=false
# How many seconds between each interval processor iteration. This must be
# an evenly divisible fraction of the smallest policy interval which is one minute
pg.PgMenConfiguration.tickInterval=15
# How many seconds before accumulated invoked service events are pushed into shared cache
pg.PgMenConfiguration.sieFlushInterval=2
# How many sie's are cached locally for a virtual service before they are flushed to shared cache
pg.PgMenConfiguration.sieFlushThreshold=50
# Three flags to determine whether different event types should be published
pg.PgMenConfiguration.publishLifeCycleEvents=false
pg.PgMenConfiguration.publishErrorEvents=false
pg.PgMenConfiguration.publishPolicyViolationEvents=false
# Are service faults included in the performance data aggregated metric counts?
pg.PgMetricsFormatter.includeFaults=false
# How many milliseconds do we delay before sending a pdu or closing the socket. (0 implies no wait)
# We do not wait by default since CentraSite has an asynchronous queue implementation.
pg.csSnmpSender.sendDelay=0
# How many milliseconds do we delay before sending a pdu or closing the socket. (0 implies no wait)
pg.3pSnmpSender.sendDelay=0
# pgmen data collection work queue minimum thread count
pg.CollectionPool.minThreads=1
# pgmen data collection work queue maximum thread count
pg.CollectionPool.maxThreads=8
# pgmen data collection thread pool will shutdown immediately since dependent resources are going down too.
pg.CollectionPool.forcefulShutdown=true
# Name for the pgmen data collection thread pool
pg.CollectionPool.poolName=CollectionPool
# Capacity for enqueued tasks of the data collection in memory work queue 
pg.CollectionWorkQueue.queueCapacity=10000
# Interval pool is used for scheduled processing of recurring tasks
# minimum thread count for this pool
pg.IntervalPool.minThreads=1
# maximum thread count for this pool
pg.IntervalPool.maxThreads=1
# Does pgmen interval thread pool shutdown immediately or wait for enqueued tasks to complete during
# mediator shutdown? Set to true since dependent resources are going down.
pg.IntervalPool.forcefulShutdown=true
# Name of the pgmen interval processor pool.
pg.IntervalPool.poolName=IntervalPool
# Reporting Pool options affect outbound event publishing 
# At this time, the pool includes all events ( performance data, snmp, smtp, etc. )
# These configuration values affect its thread pool/work queue operations in the same
# manner as the data collection pool and queue. Please see those similar values above for
# more details. 
pg.ReportingPool.minThreads=2
pg.ReportingPool.maxThreads=4
# Set to true since dependent resources are going down at the same time.
pg.ReportingPool.forcefulShutdown=true
pg.ReportingPool.poolName=ReportingPool
pg.ReportingWorkQueue.queueCapacity=5000
#
pg.rampartdeploymenthandler.signingCertAlias=
pg.rampartdeploymenthandler.usernameTokenUser=
pg.rampartdeploymenthandler.responseTimeToLive=300
#
pg.lb.http.url=
pg.lb.https.url=

# if no value exists, the runtime will default to the currently defined
# primary listener as defined by IS
pg.http.ports=
pg.https.ports=

#backup failed services, by default it is true
pg.backupFailedProxies=true
# can be absolute path or relative to the config directory
pg.failedProxies.backupDir=failed_proxies

#Specifies if Mediator should try the next load-balanced endpoint only if current failing endpoint
#was 'down' or failover no matter what exception (soap fault) is got back from backend service
#false, by default - any exception encountered will cause Mediator to try next endpoint
#set it to 'true' to make Mediator failover only for 'downtime' errors (like Connect Exception)
pg.lb.failoverOnDowntimeErrorOnly=false

#specifies if Mediator should default to using 'application/xml' as the content type for REST/XML responses
#set it to false, to use the content type value in the response
pg.rest.use.default.contentType=true

#Specifies if Mediator load the json content into cache. The content will be available in the property "jsonString" in MessageContenxt 
pg.rest.json.use.cache=true

#Specifies whether HTTPS protocol should be used for OAuth2 Access token Grant.
pg.oauth2.isHTTPS=true
#Specifes the ports with comma seperated where the Rest service is to be exposed
pg.oauth2.ports=

#specfies the default value for both Read timeout and connection time out properties which is applicable to all
#virtual services
pg.endpoint.readTimeout=30
pg.endpoint.connectionTimeout=30

#EDA Nerv Related property.
pg.nerv.muticast.stoponexception=true
pg.nerv.PgMenConfiguration.emitToSqlEndpoint=false
pg.nerv.jdbc.functional.pool.alias=
pg.nerv.PgMenConfiguration.publishLifeCycleEvents=false
pg.nerv.PgMenConfiguration.publishErrorEvents=false
pg.nerv.PgMenConfiguration.publishPolicyViolationEvents=false
pg.nerv.PgMenConfiguration.perfDataEnabled=false
pg.nerv.PgMenConfiguration.reportInterval=60
# Specifies the cache size for the EDA to hold the events emitted from Mediator. 
pg.nerv.PgMenConfiguration.cache.size=2000
# Specifies if the Events have to be published to EDA Default endpoint or not.
pg.nerv.PgMenConfiguration.emitToDefaultEndpoint=false
#The alias related Jaxb store
pg.jaxbFileStore.aliasesFileStore=resources/aliases/aliases.xml
pg.jaxbAliasServiceAssociationStore.FileStore = resources/aliases/service-alias-association.xml
pg.jaxbFileStore.aliasResourceFolder=resources/aliases/resources
#Refresher properties
pg.aliasServiceAssociation.delayedLoader.count = 5
pg.aliasServiceAssociation.delayedLoader.sleepTime = 1000 

#Engage the Listner
pg.http.listener = true

#specfies the default time to live value for all soap responses which has "Require TimeStamp" policy enforced 
pg.rampart.response.timetolive=30

#Remove the APIKey param if it is present in the URL parameter.
pg.apikey.removeParameter = true
#Header from which Mediator will get the API Key
pg.apikey.header=x-CentraSite-APIKey

#Kerberos Related Config
#pg.jaasContextName=bob
pg.jaasContextName=WSS_Transport_ProxyService
#pg.servicePrincipalName=kerberospoc/rndlabws.argos.rndlab.loc
pg.servicePrincipalName=
pg.servicePrincipalNameForm=username

pg.default.enable.oldVersion=true;

pg.use.native.contentType=true

#Elasticsearch configuration properties
pg.es.protocol=http
pg.es.hostName=
pg.es.port=9200
pg.es.userName=
pg.es.password.changed=false
pg.es.PgMenConfiguration.publishLifeCycleEvents=false
pg.es.PgMenConfiguration.publishErrorEvents=false
pg.es.PgMenConfiguration.publishPolicyViolationEvents=false
pg.es.PgMenConfiguration.perfDataEnabled=false
pg.es.PgMenConfiguration.reportInterval=60
pg.es.indexName=webmethodsmediator

#API Portal Configuration
pg.apiportal.instancesFileStore=resources/apiportal
pg.apiportal.PgMenConfiguration.publishErrorEvents=false
pg.apiportal.PgMenConfiguration.publishLifeCycleEvents=false
pg.apiportal.PgMenConfiguration.publishPolicyViolationEvents=false
pg.apiportal.PgMenConfiguration.perfDataEnabled=false
pg.apiportal.PgMenConfiguration.reportInterval=60